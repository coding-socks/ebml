// Code generated by go run make_definition.go. DO NOT EDIT.

package ebml

import "encoding/hex"

type Definition struct {
	ID       []byte
	Type     string
	Name     string
	Default  interface{}
	Children []Definition
}

func NewDefinition(id string, t, name string, def interface{}, children []Definition) Definition {
	bid, err := hex.DecodeString(id)
	if err != nil {
		panic(err)
	}
	return Definition{ID: bid, Type: t, Name: name, Default: def, Children: children}
}

var headerDefinition = NewDefinition("1A45DFA3", TypeMaster, "EBML", nil, []Definition{
	NewDefinition("4286", TypeUinteger, "EBMLVersion", 1, nil),
	NewDefinition("42F7", TypeUinteger, "EBMLReadVersion", 1, nil),
	NewDefinition("42F2", TypeUinteger, "EBMLMaxIDLength", 4, nil),
	NewDefinition("42F3", TypeUinteger, "EBMLMaxSizeLength", 8, nil),
	NewDefinition("4282", TypeString, "DocType", "ebml", nil),
	NewDefinition("4287", TypeUinteger, "DocTypeVersion", 1, nil),
	NewDefinition("4285", TypeUinteger, "DocTypeReadVersion", 1, nil),
	NewDefinition("4281", TypeMaster, "DocTypeExtension", nil, []Definition{
		NewDefinition("4283", TypeString, "DocTypeExtensionName", nil, nil),
		NewDefinition("4284", TypeUinteger, "DocTypeExtensionVersion", nil, nil),
	}),
})
